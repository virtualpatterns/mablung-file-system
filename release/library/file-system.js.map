{"version":3,"sources":["../../source/library/file-system.js"],"names":[],"mappings":"AAAA,OAAO,WAAP,MAAwB,UAAxB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,OAAT,QAAwB,kCAAxB;AACA,OAAO,KAAP,MAAkB,OAAlB;;AAEA,MAAM,UAAN,CAAiB;;AAEH,SAAL,KAAK,CAAC,GAAG,SAAJ,EAAe;AACzB,WAAO,KAAK,CAAC,KAAN,CAAY,IAAZ,EAAkB,SAAlB,CAAP;AACD;;AAEgB,SAAV,UAAU,CAAC,eAAD,EAAkB,YAAlB,EAAgC,IAAhC,EAAsC;AACrD,WAAO,OAAO,CAAC,IAAR,CAAa,eAAb,EAA8B,YAA9B,EAA4C,MAAM;AACvD,aAAO,UAAU,CAAC,UAAX,CAAsB,IAAtB,CAAP;AACD,KAFM,CAAP;AAGD;;AAEmB,SAAb,aAAa,CAAC,eAAD,EAAkB,YAAlB,EAAgC,IAAhC,EAAsC;AACxD,WAAO,OAAO,CAAC,IAAR,CAAa,eAAb,EAA8B,YAA9B,EAA4C,MAAM;AACvD,aAAO,UAAU,CAAC,UAAX,CAAsB,IAAtB;AACJ,MAAA,IADI,CACC,CAAC,KAAD,KAAW,CAAC,KADb,CAAP;AAED,KAHM,CAAP;AAID;;AAEiB,SAAX,WAAW,CAAC,IAAD,EAAO,MAAM,GAAG,EAAE,YAAY,OAAd,EAAhB,EAAyC;AACzD,WAAO,UAAU,CAAC,QAAX,CAAoB,IAApB,EAA0B,MAA1B;AACJ,IAAA,IADI,CACC,CAAC,QAAD,KAAc;AAClB,aAAO,QAAQ;AACZ,MAAA,KADI,CACE,IADF;AAEJ,MAAA,MAFI,CAEG,CAAC,KAAD,KAAW,KAAK,KAAK,EAFxB;AAGJ,MAAA,GAHI,CAGA,CAAC,KAAD,KAAW,KAAK,CAAC,KAAN,CAAY,KAAZ,CAHX,CAAP;AAID,KANI,CAAP;AAOD,GA3Bc;;;;AA+BjB,MAAM,CAAC,cAAP,CAAsB,UAAtB,EAAkC,WAAlC;;AAEA,SAAS,UAAT","file":"file-system.js","sourcesContent":["import _FileSystem from 'fs-extra'\nimport JSON5 from 'json5'\nimport { Process } from '@virtualpatterns/mablung-process'\nimport Touch from 'touch'\n\nclass FileSystem {\n\n  static touch(...parameter) {\n    return Touch.apply(this, parameter)\n  }\n\n  static whenExists(maximumDuration, pollInterval, path) {\n    return Process.when(maximumDuration, pollInterval, () => {\n      return FileSystem.pathExists(path)\n    })\n  }\n    \n  static whenNotExists(maximumDuration, pollInterval, path) {\n    return Process.when(maximumDuration, pollInterval, () => {\n      return FileSystem.pathExists(path)\n        .then((value) => !value)\n    })\n  }\n\n  static readAllJson(path, option = { 'encoding': 'utf-8' }) {\n    return FileSystem.readFile(path, option)\n      .then((contents) => {\n        return contents\n          .split('\\n')\n          .filter((value) => value !== '')\n          .map((value) => JSON5.parse(value))\n      })\n  }\n\n}\n\nObject.setPrototypeOf(FileSystem, _FileSystem)\n\nexport { FileSystem }\n"]}